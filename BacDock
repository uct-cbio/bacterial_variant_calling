FROM quay.io/cybozu/ubuntu:20.04

RUN apt-get update --fix-missing -qq && apt-get install -y -q \
    aufs-tools \
    automake \
    build-essential \
    cmake \
    curl \
    g++ \
    openjdk-8-jre \
    openjdk-8-jdk \
    locales \
    libncurses5-dev  \
    libncursesw5-dev \
    libcurl4-openssl-dev \
    libbz2-dev \
    libx11-dev \
    pkg-config \
    zlib1g-dev \
    bzip2 \
    r-base \
    default-jre \
    git-core \
    bc \
    unzip \
    wget \    
    rename \
    xutils-dev \
    python3 \
    python3-pip \
    bowtie2 \
    meson \
    perl \
    && apt-get clean \
    && apt-get purge

RUN apt-get update --fix-missing -qq && apt-get install -y -q \
    software-properties-common

RUN add-apt-repository ppa:deadsnakes/ppa

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1

RUN python --version

RUN python -m pip install --upgrade pip && \
    python -m pip install numpy && \
    python -m pip install scipy && \
    python -m pip install biopython && \
    python -m pip install RSeQC && \
    python -m pip install multiqc && \
    python -m pip install venn  && \
    python -m pip install pandas && \
    # Biopython is pre-requisite
    python -m pip install bioscripts.convert

RUN curl -fksSL https://github.com/vcftools/vcftools/releases/download/v0.1.14/vcftools-0.1.14.tar.gz | tar xz && \
    cd vcftools-0.1.14 && \
    ./configure; make; make install

## Install R packages for ggplot2
RUN R -e 'install.packages( c("reshape","optparse", "BiocManager"), repos="http://cloud.r-project.org/");' && \
    apt-get update && apt-get install r-cran-ggplot2 -y -q
RUN R -e 'BiocManager::install("dupRadar");'

# Install Jellyfish (a tool for fast, memory-efficient counting of k-mers in DNA)
RUN cd /opt && \
    wget https://github.com/gmarcais/Jellyfish/releases/download/v2.2.6/jellyfish-2.2.6.tar.gz && \
    tar -xvf jellyfish-2.2.6.tar.gz && \
    cd jellyfish-2.2.6 && \
    ./configure && \
    make -j 4 && \
    ln -s /opt/jellyfish-2.2.6/bin/jellyfish /usr/bin && \
    cd / && \
    rm /opt/jellyfish-2.2.6.tar.gz

# Install CoverageSampler
RUN cd /opt && \
    git clone https://github.com/cdeanj/coverage_sampler.git && \
    cd coverage_sampler && \
    make && \
    ln -s /opt/coverage_sampler/csa /usr/bin && \
    cd /

# CD-HIT
RUN git clone https://github.com/weizhongli/cdhit.git && \
    cd cdhit &&\
    make MAX_SEQ=10000000 && \
    cd

# FastQC
ENV DST=/tmp
ENV URL=https://github.com/agordon/libgtextutils/releases/download/0.7/

RUN wget $URL/libgtextutils-0.7.tar.gz -O $DST/libgtextutils-0.7.tar.gz && \
    tar -xvzf $DST/libgtextutils-0.7.tar.gz -C $DST && \
    rm $DST/libgtextutils-0.7.tar.gz && \
    cd $DST/libgtextutils-0.7 && \
    sed -i '47s/input_stream/static_cast<bool>(input_stream)/' src/gtextutils/text_line_reader.cpp && \
    ./configure && \
    make && \
    make install && \
    cd / && \
    rm -rf $DST/libgtextutils-0.7

WORKDIR /opt/

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH

RUN apt-get update --fix-missing && apt-get install -y wget bzip2 ca-certificates \
    libglib2.0-0 libxext6 libsm6 libxrender1 \
    git mercurial subversion

# Install miniconda
RUN mkdir -p ~/miniconda3
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh && \
    /bin/bash ~/miniconda3/miniconda.sh -b -u -p /opt/conda && \
    rm -rf ~/miniconda3/miniconda.sh && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

# Install vcf2fasta
RUN git clone https://github.com/egeza/vcf2fasta.git && \
    cd vcf2fasta && \
    chmod a+x process_samples.py && \
    chmod a+x vcf2fasta.py && \
    ln -s /vcf2fasta/vcf2fasta.py /usr/local/bin/vcf2fasta.py && \
    ln -s /vcf2fasta/process_samples.py /usr/local/bin/process_samples.py

#Install mamba so that we can install conda packages with mamba
RUN conda install mamba -n base -c conda-forge && \
    mamba clean -i 

#Install conda packages using mamba
RUN mamba install -c hcc resistomeanalyzer
RUN mamba install -c conda-forge -c bioconda python=3.9 \
    cutadapt \
    fastqc \
    picard=2.18.27 \
    deeptools \
    gsl \
    xorg-libxtst  \
    r-data.table \
    r-gplots \
    r-markdown \
    tini \
    trimmomatic \
    snpeff \
    fastx_toolkit  \
    raxml \
    gffread=0.9.12 

RUN wget https://github.com/ComputationalSystemsBiology/EoulsanDockerFiles/raw/master/TrimAdapt/trim_galore_v0.4.1.zip && \
    unzip trim_galore_v0.4.1.zip -d . && \
    ln -s /opt/trim_galore_zip/trim_galore /usr/local/bin/

# figtree requires xorg-libxtst. Some errors especially 
RUN mamba install -c conda-forge -c bioconda sra-tools \ 
    samtools \
    tbb=2020.2 \ 
    star \
    bwa \ 
    # CSV/TSV toolkit
    csvtk=0.17.0 \
    bcftools \
    # Alignment
    clustalo \
    muscle \
    mafft \
    # Phylogenetics
    freebayes \
    beast \
    circos \
    figtree \
    bioconductor-deseq2 \
    phyml

# ksnp keeps updating and unfortunately with no tracks of older versions 
RUN wget https://sourceforge.net/projects/ksnp/files/kSNP4%20Linux%20package.zip/download && \
  mv download download.zip && \
  unzip download.zip && \
  #mv kSNP4\ Linux\ package/kSNP4pkg/ /usr/local/bin/
  mv kSNP4\ Linux\ package/ kSNP4_Linux_package && \ 
  ln /opt/kSNP4_Linux_package/kSNP4pkg/kSNP4 /usr/local/bin/

RUN groupadd -r -g 1000 ubuntu && useradd -r -g ubuntu -u 1000 -m ubuntu
USER ubuntu

ENV PATH /usr/local/envs/bacterial_genomics/bin/:$PATH

# Build this image
#docker build --network=host -t bacterial_variant_calling_v1 -f BacDock

# To build sing image
#docker run -v /var/run/docker.sock:/var/run/docker.sock -v /vol1/ephie/output --privileged -t --rm \
#singularityware/docker2singularity:v2.6 -m "/shared_fs /custom_mountpoint2" bacterial_variant_calling_v1:latest

# To SCP
# scp /vol1/ephie/output/<image> ephie@transfer.ilifu.ac.za:/cbio/users/ephie/images/
